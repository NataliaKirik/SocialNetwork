{"version":3,"sources":["Components/3navbar/2messages/messages.module.css","Components/3navbar/navbar.module.css","Components/1header/header.module.css","Components/4friends/Friend/friend.module.css","Components/3navbar/2messages/message/user/user.module.css","App.module.css","Components/2main/post/post.module.css","Components/4friends/friends.module.css","Components/3navbar/1profile/profile.module.css","Components/3navbar/3news/news.module.css","Components/3navbar/4music/music.module.css","Components/3navbar/5settings/settings.module.css","Components/2main/main.module.css","Components/1header/6e.png","Components/1header/header.tsx","Components/2main/post/post.tsx","Components/2main/main.tsx","Components/4friends/Friend/friend.tsx","Components/4friends/friends.tsx","Components/3navbar/navbar.tsx","Components/3navbar/2messages/message/user/user.tsx","Components/3navbar/2messages/message/usersMessage/message.tsx","Components/3navbar/2messages/messages.tsx","Components/3navbar/1profile/profile.tsx","Components/3navbar/3news/news.tsx","Components/3navbar/4music/music.tsx","Components/3navbar/5settings/settings.tsx","App.tsx","Redux/state.ts","index.tsx"],"names":["module","exports","Header","className","s","headerWrapper","src","logo","alt","headerImgLogo","headerText","Post","props","postsWrapper","imgInPost","name","title","likesCount","Main","posts","dataMain","map","p","id","newPostElement","React","createRef","mainWrapper","ref","onChange","text","current","value","updateNewPostText","newPostText","onClick","addPost","Friend","friendWrapper","ava","friendName","Friends","arrayFriends","friends","f","friendsWrapper","friendsTitle","Navbar","navBarWrapper","to","activeClassName","activeLink","link","dataFriends","User","userMessageWrapper","avatarWrapper","Message","Messages","arrayUser","dataUsersMessages","user","arrayMessages","dataMessages","message","MessageMainWrapper","dialogsUsersWrapper","message_Title","usersWrapper","messageWrapper","usersMessageTitle","usersMessageWrapper","Profile","profileWrapper","titleProfile","News","newsWrapper","newsTitle","Music","musicWrapper","musicTitle","Settings","settingsWrapper","settingsTitle","App","styles","dataFriendsLittlePage","render","dataMainPage","path","dataMessagePage","usersMessages","messages","store","_state","mainPage","messagePage","friendsLittlePage","_callSubscriber","state","console","log","getState","this","newPost","push","newText","subscriber","observer","rerenderEntireTree","ReactDOM","StrictMode","bind","document","getElementById"],"mappings":"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","file":"static/js/main.a304de3c.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"MessageMainWrapper\":\"messages_MessageMainWrapper__1OKC6\",\"message_Title\":\"messages_message_Title__15hP1\",\"usersMessageTitle\":\"messages_usersMessageTitle__abA9d\",\"dialogsUsersWrapper\":\"messages_dialogsUsersWrapper___xND2\",\"messageWrapper\":\"messages_messageWrapper__3uJSt\",\"usersWrapper\":\"messages_usersWrapper__3AEps\",\"usersMessageWrapper\":\"messages_usersMessageWrapper__2XBgT\",\"user\":\"messages_user__1j9b4\",\"message\":\"messages_message__yjrzt\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"navBarWrapper\":\"navbar_navBarWrapper__2KyIl\",\"activeLink\":\"navbar_activeLink__2fqXp\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"headerWrapper\":\"header_headerWrapper__1gRim\",\"headerImgLogo\":\"header_headerImgLogo__2EYgb\",\"headerText\":\"header_headerText__2RCV8\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"friendWrapper\":\"friend_friendWrapper__399ym\",\"ava\":\"friend_ava__2M0Jw\",\"friendName\":\"friend_friendName__UlXX9\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"userMessageWrapper\":\"user_userMessageWrapper__2T8Wn\",\"avatarWrapper\":\"user_avatarWrapper__BVetg\",\"title\":\"user_title__3Vyo7\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"App\":\"App_App__n14Yk\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"postsWrapper\":\"post_postsWrapper__D_5lD\",\"imgInPost\":\"post_imgInPost__1eD0W\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"friendsWrapper\":\"friends_friendsWrapper__25TbQ\",\"friendsTitle\":\"friends_friendsTitle__1B-SR\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"profileWrapper\":\"profile_profileWrapper__1hrj0\",\"titleProfile\":\"profile_titleProfile__2MhB1\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"newsWrapper\":\"news_newsWrapper__aPQRP\",\"newsTitle\":\"news_newsTitle__JCabO\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"musicWrapper\":\"music_musicWrapper__YQ4YM\",\"musicTitle\":\"music_musicTitle__h-6pT\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"settingsWrapper\":\"settings_settingsWrapper__2mkzX\",\"settingsTitle\":\"settings_settingsTitle__CIAXw\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"mainWrapper\":\"main_mainWrapper__1FS6n\"};","export default __webpack_public_path__ + \"static/media/6e.8317e12d.png\";","import React from 'react'\r\nimport s from './header.module.css'\r\nimport logo from './6e.png'\r\n\r\n\r\nconst Header = () => {\r\n    return (\r\n        <header className={s.headerWrapper}>\r\n            <img\r\n                src={logo}\r\n                alt=\"logo\" className={s.headerImgLogo}/>\r\n            <h1 className={s.headerText}>Header</h1>\r\n\r\n        </header>\r\n    )\r\n}\r\nexport default Header\r\n","import React from \"react\";\r\nimport s from './post.module.css'\r\nimport {PostsType} from \"../../../Redux/state\";\r\n\r\n\r\nconst Post: React.FC<PostsType> = (props) => {\r\n    return (<div className={s.postsWrapper}>\r\n        <div>\r\n            <img src=\"https://i.pinimg.com/originals/0c/a9/e2/0ca9e28dcb12dc698cfd2beda6d6fa64.jpg\" alt=\"\"\r\n                 className={s.imgInPost}/>\r\n        </div>\r\n\r\n        <b>{props.name}</b>\r\n        <div>{props.title}</div>\r\n        <div>Likes:{props.likesCount}</div>\r\n    </div>)\r\n}\r\nexport default Post","import React from \"react\";\r\nimport s from './main.module.css'\r\nimport Post from \"./post/post\";\r\nimport {PostsType} from \"../../Redux/state\";\r\n\r\ntype MainProps = {\r\n    dataMain: Array<PostsType>\r\n    addPost: (textMessage?: string) => void\r\n    newPostText?: string\r\n    updateNewPostText: (newText?: string) => void\r\n}\r\n\r\n\r\nconst Main: React.FC<MainProps> = (props) => {\r\n    let posts = [\r\n        props.dataMain.map(\r\n            (p: PostsType) => {\r\n                return (<Post title={p.title} likesCount={p.likesCount} name={p.name} id={p.id}/>)\r\n            }\r\n        )\r\n    ]\r\n    let newPostElement = React.createRef<HTMLTextAreaElement>()\r\n    const addPost = () => {\r\n        let text = newPostElement.current?.value\r\n        props.addPost(text)\r\n    }\r\n\r\n    let onPostChange = () => {\r\n        let text = newPostElement.current?.value\r\n        props.updateNewPostText(text)\r\n    }\r\n\r\n    return (<div className={s.mainWrapper}>\r\n        <b> Posts</b>\r\n        <div><textarea ref={newPostElement} onChange={onPostChange} value={props.newPostText}/></div>\r\n\r\n        <button onClick={addPost}>add post</button>\r\n        {posts}\r\n    </div>)\r\n}\r\nexport default Main\r\n\r\n","import React from 'react';\r\nimport s from './friend.module.css'\r\n\r\ntype FriendProps = {\r\n    name: string\r\n}\r\n\r\nexport const Friend: React.FC<FriendProps> = (props) => {\r\n    return (<div className={s.friendWrapper}>\r\n        <img className={s.ava}\r\n             src=\"https://proprikol.ru/wp-content/uploads/2019/08/krutye-kartinki-dlya-vk-28.jpg\"\r\n             alt=\"avatar\"/>\r\n        <div className={s.friendName}>{props.name}</div>\r\n\r\n    </div>)\r\n}","import React from 'react';\r\nimport s from './friends.module.css'\r\nimport {Friend} from \"./Friend/friend\";\r\nimport {friendsLittlePageType} from \"../../Redux/state\";\r\n\r\ntype FriendsProps = {\r\n    name: friendsLittlePageType\r\n}\r\n\r\nexport const Friends: React.FC<FriendsProps> = (props) => {\r\n    let arrayFriends = props.name.friends.map((f) => {\r\n        return (\r\n            <span><Friend name={f.title}/></span>\r\n        )\r\n    })\r\n    return (\r\n        <div className={s.friendsWrapper}>\r\n            <div className={s.friendsTitle}>Active friends</div>\r\n            {arrayFriends}\r\n        </div>\r\n    )\r\n}","import React from \"react\";\r\nimport s from './navbar.module.css'\r\nimport {NavLink} from \"react-router-dom\";\r\nimport {Friends} from \"../4friends/friends\";\r\nimport {friendsLittlePageType} from \"../../Redux/state\";\r\n\r\ntype NavbarProps={\r\n    dataFriends: friendsLittlePageType\r\n}\r\nconst Navbar:React.FC<NavbarProps> = (props) => {\r\n    return (\r\n        <div className={s.navBarWrapper}>\r\n            <div><NavLink to={'/Main'} activeClassName={s.activeLink} className={s.link}>Main</NavLink></div>\r\n            <div><NavLink to={'/Profile'} activeClassName={s.activeLink}>Profile</NavLink></div>\r\n            <div><NavLink to={'/Message'} activeClassName={s.activeLink}>Messages</NavLink></div>\r\n            <div><NavLink to={'/News'} activeClassName={s.activeLink}>News</NavLink></div>\r\n            <div><NavLink to={'/Music'} activeClassName={s.activeLink}>Music</NavLink></div>\r\n            <div><NavLink to={'/Settings'} activeClassName={s.activeLink}>Settings</NavLink></div>\r\n            <Friends name={props.dataFriends}/>\r\n\r\n        </div>)\r\n}\r\nexport default Navbar","import React from \"react\";\r\nimport {NavLink} from \"react-router-dom\";\r\nimport s from './user.module.css'\r\nimport {usersMessagesType} from \"../../../../../Redux/state\";\r\n\r\n\r\nconst User: React.FC<usersMessagesType> = (props) => {\r\n    return (\r\n            <NavLink to={'/Message/' + props.id} className={s.userMessageWrapper}>\r\n\r\n                <img className={s.avatarWrapper}\r\n                     src=\"https://i.pinimg.com/564x/27/b8/d3/27b8d3c4ad0edaeef6b058c48d77e15c.jpg\"\r\n                     alt=\"UsersMessageAvatar\"/>\r\n                <div className={s.title}>{props.title}</div>\r\n\r\n            </NavLink>\r\n    )\r\n}\r\nexport default User","import React from \"react\";\r\nimport s from './message.module.css'\r\nimport {MessagesType} from \"../../../../../Redux/state\";\r\n\r\n\r\nconst Message: React.FC<MessagesType> = (props) => {\r\n    return (\r\n        <div>{props.title}</div>\r\n    )\r\n}\r\nexport default Message","import React from \"react\";\r\nimport s from './messages.module.css'\r\nimport {BrowserRouter} from \"react-router-dom\";\r\nimport User from \"./message/user/user\";\r\nimport Message from \"./message/usersMessage/message\";\r\nimport {MessagesType, usersMessagesType} from \"../../../Redux/state\";\r\n\r\ntype MessagesProps = {\r\n    dataUsersMessages: Array<usersMessagesType>\r\n    dataMessages: Array<MessagesType>\r\n}\r\n\r\nconst Messages: React.FC<MessagesProps> = (props) => {\r\n    let arrayUser = props.dataUsersMessages.map(\r\n        (user: usersMessagesType) => {\r\n            return (<div className={s.user}><User title={user.title} id={user.id}/></div>)\r\n        }\r\n    )\r\n\r\n\r\n    let arrayMessages = props.dataMessages.map(\r\n        (message: MessagesType) => {\r\n            return (<div className={s.message}><Message title={message.title} id={message.id}/></div>)\r\n        }\r\n    )\r\n    return (\r\n        <BrowserRouter>\r\n            <div className={s.MessageMainWrapper}>\r\n                <div className={s.dialogsUsersWrapper}>\r\n                    <div className={s.message_Title}>Users Dialogs</div>\r\n                    <div className={s.usersWrapper}>\r\n\r\n                        {arrayUser}\r\n\r\n                    </div>\r\n                </div>\r\n\r\n                <div className={s.messageWrapper}>\r\n                    <div className={s.usersMessageTitle}>Users Messages</div>\r\n                    <div className={s.usersMessageWrapper}>\r\n\r\n                        {arrayMessages}\r\n\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </BrowserRouter>)\r\n\r\n}\r\nexport default Messages","import React from \"react\";\r\nimport s from './profile.module.css'\r\n\r\n\r\nconst Profile = () => {\r\n    return (<div className={s.profileWrapper}>\r\n        <div className={s.titleProfile}>Profile</div>\r\n    </div>)\r\n}\r\nexport default Profile","import React from \"react\";\r\nimport s from './news.module.css'\r\n\r\n\r\nconst News = () => {\r\n    return (<div className={s.newsWrapper}>\r\n        <div className={s.newsTitle}>News</div>\r\n    </div>)\r\n}\r\nexport default News","import React from \"react\";\r\nimport s from './music.module.css'\r\n\r\n\r\nconst Music = () => {\r\n    return (<div className={s.musicWrapper}>\r\n        <div className={s.musicTitle}>Music</div>\r\n    </div>)\r\n}\r\nexport default Music","import React from \"react\";\r\nimport s from './settings.module.css'\r\n\r\n\r\nconst Settings=()=>{\r\n    return (<div className={s.settingsWrapper}>\r\n        <div className={s.settingsTitle}>Settings</div>\r\n    </div>)\r\n}\r\nexport default Settings","import React from 'react';\nimport './App.module.css';\nimport Header from \"./Components/1header/header\";\nimport Main from \"./Components/2main/main\";\nimport Navbar from \"./Components/3navbar/navbar\";\nimport Footer from \"./Components/5footer/footer\";\nimport styles from './App.module.css'\nimport Messages from \"./Components/3navbar/2messages/messages\";\nimport Profile from \"./Components/3navbar/1profile/profile\";\nimport News from \"./Components/3navbar/3news/news\";\nimport Music from \"./Components/3navbar/4music/music\";\nimport Settings from \"./Components/3navbar/5settings/settings\";\nimport {BrowserRouter, Route, Link} from \"react-router-dom\";\nimport {friendsLittlePageType, mainPageType, messagePageType, PostsType} from \"./Redux/state\";\nimport {Friends} from './Components/4friends/friends';\n\ntype AppProps = {\n    dataMainPage: mainPageType\n    dataMessagePage: messagePageType\n    dataFriendsLittlePage: friendsLittlePageType\n    addPost: (textMessage?: string) => void\n    updateNewPostText: (newText?: string) => void\n}\n\nfunction App(props: AppProps) {\n    return (\n        <BrowserRouter>\n            <div className={styles.App}>\n                <Header/>\n                <Navbar dataFriends={props.dataFriendsLittlePage}/>\n                <Route render={() => <Main addPost={props.addPost} dataMain={props.dataMainPage.posts}\n                                           newPostText={props.dataMainPage.newPostText}\n                                           updateNewPostText={props.updateNewPostText}/>} path={'/Main'}\n                />\n                <Route render={() => <Profile/>} path={'/Profile'}/>\n                <Route render={() => <Messages dataUsersMessages={props.dataMessagePage.usersMessages}\n                                               dataMessages={props.dataMessagePage.messages}/>} path={'/Message'}/>\n                <Route render={() => <News/>} path={'/News'}/>\n                <Route render={() => <Music/>} path={'/Music'}/>\n                <Route render={() => <Settings/>} path={'/Settings'}/>\n\n                {/*<Footer/>*/}\n            </div>\n            ;\n        </BrowserRouter>\n    );\n}\n\nexport default App;\n","export let store:StoreType = {\r\n    _state: {\r\n        mainPage: {\r\n            posts: [\r\n                {id: 1, title: 'Hello', likesCount: 15, name: 'Igor Petrov'},\r\n                {id: 2, title: 'What are you doing?', likesCount: 20, name: 'George Ivanov'},\r\n                {id: 3, title: 'Yo', likesCount: 10, name: 'Mike Sidorov'}\r\n            ],\r\n            newPostText: ''\r\n        },\r\n        messagePage: {\r\n            usersMessages: [\r\n                {id: 1, title: 'Igor Petrov'},\r\n                {id: 2, title: 'Ilya Sergeev'},\r\n                {id: 3, title: 'George Ivanov'},\r\n                {id: 4, title: 'Maria Sokolova'},\r\n                {id: 5, title: 'Mike Sidorov'}\r\n            ],\r\n            messages: [\r\n                {id: 1, title: 'Hello'},\r\n                {id: 2, title: 'How are you?'},\r\n                {id: 3, title: 'Hi'},\r\n                {id: 4, title: 'YO'},\r\n                {id: 5, title: 'I\\'m fine'}\r\n            ]\r\n        },\r\n        friendsLittlePage: {\r\n            friends: [\r\n                {id: 1, title: 'Borys Sidorov'},\r\n                {id: 2, title: 'Ivan Golubev'}\r\n            ]\r\n        }\r\n    },\r\n    _callSubscriber(state: RootStateType) {\r\n        console.log('state changed');\r\n    },\r\n    getState() {\r\n        return this._state\r\n    },\r\n    addPost() {\r\n        let newPost = {\r\n            id: 5,\r\n            title: this._state.mainPage.newPostText,\r\n            likesCount: 10,\r\n            name: 'Brand Nesterov'\r\n        }\r\n        this._state.mainPage.posts.push(newPost)\r\n        this._state.mainPage.newPostText = ''\r\n        this._callSubscriber(this.getState())\r\n    },\r\n    updateNewPostText(newText?:string) {\r\n        this._state.mainPage.newPostText = newText\r\n        this._callSubscriber(this.getState())\r\n    },\r\n    subscriber(observer: (state: RootStateType) => void) {\r\n        this._callSubscriber = observer\r\n    }\r\n}\r\nexport type StoreType={\r\n    _state:RootStateType\r\n    _callSubscriber:(state:RootStateType)=>void\r\n    getState:()=>RootStateType\r\n    addPost:()=>void\r\n    updateNewPostText:(newText?:string)=>void\r\n    subscriber:(observer: (state: RootStateType) => void)=>void\r\n}\r\n\r\nexport type RootStateType = {\r\n    mainPage: mainPageType\r\n    messagePage: messagePageType\r\n    friendsLittlePage: friendsLittlePageType\r\n}\r\nexport type mainPageType = {\r\n    posts: Array<PostsType>\r\n    newPostText?: string\r\n}\r\nexport type PostsType = {\r\n    id: number\r\n    title: string | undefined\r\n    likesCount: number\r\n    name: string\r\n}\r\nexport type littleFriendsType = {\r\n    id: number\r\n    title: string\r\n}\r\nexport type usersMessagesType = {\r\n    id: number\r\n    title: string\r\n}\r\nexport type MessagesType = {\r\n    id: number\r\n    title: string\r\n}\r\nexport type friendsLittlePageType = {\r\n    friends: Array<littleFriendsType>\r\n}\r\nexport type messagePageType = {\r\n    usersMessages: Array<usersMessagesType>\r\n    messages: Array<MessagesType>\r\n}\r\n\r\n\r\n\r\n\r\n","import React from 'react';\nimport './index.css';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport {RootStateType, store} from \"./Redux/state\";\n\nlet rerenderEntireTree = (state: RootStateType) => {\n    ReactDOM.render(\n        <React.StrictMode>\n            <App dataMainPage={store._state.mainPage} dataMessagePage={store._state.messagePage}\n                 dataFriendsLittlePage={store._state.friendsLittlePage}\n                 addPost={store.addPost.bind(store)} updateNewPostText={store.updateNewPostText.bind(store)}/>\n        </React.StrictMode>,\n        document.getElementById('root')\n    )\n}\nrerenderEntireTree(store.getState());\n\nstore.subscriber(rerenderEntireTree)\n\n\n"],"sourceRoot":""}