{"version":3,"sources":["Components/3navbar/2messages/messages.module.css","Components/3navbar/navbar.module.css","Components/3navbar/2messages/message/user/user.module.css","App.module.css","Components/3navbar/1profile/profile.module.css","Components/3navbar/3news/news.module.css","Components/3navbar/4music/music.module.css","Components/3navbar/5settings/settings.module.css","Components/2main/post/post.module.css","Components/1header/header.module.css","Components/2main/main.module.css","Components/1header/header.tsx","Components/3navbar/navbar.tsx","Components/3navbar/1profile/profile.tsx","Components/3navbar/3news/news.tsx","Components/3navbar/4music/music.tsx","Components/3navbar/5settings/settings.tsx","Components/2main/post/post.tsx","Components/2main/main.tsx","Redux/main_Reducer.ts","Components/2main/main_Container.tsx","Components/3navbar/2messages/message/user/user.tsx","Components/3navbar/2messages/message/usersMessage/message.tsx","Components/3navbar/2messages/messages.tsx","Redux/messages_Reducer.ts","Components/3navbar/2messages/messagesContainer.tsx","App.tsx","Redux/redux-store.ts","index.tsx"],"names":["module","exports","Header","className","s","headerWrapper","Navbar","navBarWrapper","to","activeClassName","activeLink","Profile","profileWrapper","titleProfile","News","newsWrapper","newsTitle","Music","musicWrapper","musicTitle","Settings","settingsWrapper","settingsTitle","Post","props","postsWrapper","src","alt","imgInPost","name","title","likesCount","Main","posts","dataMain","map","p","id","mainWrapper","onChange","e","text","currentTarget","value","updateNewPostText","newPostText","onClick","addPost","initialState","mainReducer","state","action","stateCopy","type","newPost","push","newText","MainContainer","connect","mainPage","dispatch","updateNewPostTextActionCreator","User","userMessageWrapper","avatarWrapper","Message","Messages","arrayUser","dataMessagePage","usersMessages","user","arrayMessages","messages","message","MessageMainWrapper","dialogsUsersWrapper","message_Title","usersWrapper","messageWrapper","usersMessageTitle","usersMessageWrapper","messageChange","newMessageText","addMessage","messagesReducer","newMessage","MessageContainer","messagePage","updateNewMessageTextActionCreator","App","render","path","reducers","combineReducers","store","createStore","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.62585241.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"MessageMainWrapper\":\"messages_MessageMainWrapper__1OKC6\",\"message_Title\":\"messages_message_Title__15hP1\",\"usersMessageTitle\":\"messages_usersMessageTitle__abA9d\",\"dialogsUsersWrapper\":\"messages_dialogsUsersWrapper___xND2\",\"messageWrapper\":\"messages_messageWrapper__3uJSt\",\"usersWrapper\":\"messages_usersWrapper__3AEps\",\"usersMessageWrapper\":\"messages_usersMessageWrapper__2XBgT\",\"user\":\"messages_user__1j9b4\",\"message\":\"messages_message__yjrzt\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"navBarWrapper\":\"navbar_navBarWrapper__2KyIl\",\"activeLink\":\"navbar_activeLink__2fqXp\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"userMessageWrapper\":\"user_userMessageWrapper__2T8Wn\",\"avatarWrapper\":\"user_avatarWrapper__BVetg\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"App\":\"App_App__n14Yk\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"profileWrapper\":\"profile_profileWrapper__1hrj0\",\"titleProfile\":\"profile_titleProfile__2MhB1\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"newsWrapper\":\"news_newsWrapper__aPQRP\",\"newsTitle\":\"news_newsTitle__JCabO\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"musicWrapper\":\"music_musicWrapper__YQ4YM\",\"musicTitle\":\"music_musicTitle__h-6pT\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"settingsWrapper\":\"settings_settingsWrapper__2mkzX\",\"settingsTitle\":\"settings_settingsTitle__CIAXw\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"postsWrapper\":\"post_postsWrapper__D_5lD\",\"imgInPost\":\"post_imgInPost__1eD0W\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"headerWrapper\":\"header_headerWrapper__1gRim\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"mainWrapper\":\"main_mainWrapper__1FS6n\"};","import React from 'react'\r\nimport s from './header.module.css'\r\n\r\n\r\nconst Header = () => {\r\n    return (\r\n        <header className={s.headerWrapper}>\r\n        </header>\r\n    )\r\n}\r\nexport default Header\r\n","import React from \"react\";\r\nimport s from './navbar.module.css'\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\n\r\n\r\nconst Navbar = () => {\r\n    return (\r\n        <div className={s.navBarWrapper}>\r\n            <div><NavLink to={'/Main'} activeClassName={s.activeLink}>Main</NavLink></div>\r\n            <div><NavLink to={'/Profile'} activeClassName={s.activeLink}>Profile</NavLink></div>\r\n            <div><NavLink to={'/Message'} activeClassName={s.activeLink}>Messages</NavLink></div>\r\n            <div><NavLink to={'/News'} activeClassName={s.activeLink}>News</NavLink></div>\r\n            <div><NavLink to={'/Music'} activeClassName={s.activeLink}>Music</NavLink></div>\r\n            <div><NavLink to={'/Settings'} activeClassName={s.activeLink}>Settings</NavLink></div>\r\n        </div>)\r\n}\r\nexport default Navbar","import React from \"react\";\r\nimport s from './profile.module.css'\r\n\r\n\r\nconst Profile = () => {\r\n    return (<div className={s.profileWrapper}>\r\n        <div className={s.titleProfile}>Profile</div>\r\n    </div>)\r\n}\r\nexport default Profile","import React from \"react\";\r\nimport s from './news.module.css'\r\n\r\n\r\nconst News = () => {\r\n    return (<div className={s.newsWrapper}>\r\n        <div className={s.newsTitle}>News</div>\r\n    </div>)\r\n}\r\nexport default News","import React from \"react\";\r\nimport s from './music.module.css'\r\n\r\n\r\nconst Music = () => {\r\n    return (<div className={s.musicWrapper}>\r\n        <div className={s.musicTitle}>Music</div>\r\n    </div>)\r\n}\r\nexport default Music","import React from \"react\";\r\nimport s from './settings.module.css'\r\n\r\n\r\nconst Settings=()=>{\r\n    return (<div className={s.settingsWrapper}>\r\n        <div className={s.settingsTitle}>Settings</div>\r\n    </div>)\r\n}\r\nexport default Settings","import React from \"react\";\r\nimport s from './post.module.css'\r\nimport {PostsType} from \"../../../Redux/oldStore_Types\";\r\n\r\n\r\nconst Post: React.FC<PostsType> = (props) => {\r\n    return (<div className={s.postsWrapper}>\r\n        <div>\r\n            <img src=\"https://www.meme-arsenal.com/memes/5eae5104f379baa355e031fa1ded886c.jpg\" alt=\"\"\r\n                 className={s.imgInPost}/>\r\n        </div>\r\n\r\n        <b>{props.name}</b>\r\n        <div>{props.title}</div>\r\n        <div>Likes:{props.likesCount}</div>\r\n    </div>)\r\n}\r\nexport default Post","import React, {ChangeEvent} from \"react\";\r\nimport s from './main.module.css'\r\nimport Post from \"./post/post\";\r\nimport {mainPageType, PostsType} from \"../../Redux/oldStore_Types\";\r\n\r\ntype MainProps = {\r\n    dataMain: mainPageType\r\n    updateNewPostText: (text: string) => void\r\n    addPost: () => void\r\n}\r\n\r\nconst Main = (props: MainProps) => {\r\n    let posts = [\r\n        props.dataMain.posts.map(\r\n            (p: PostsType) => {\r\n                return (<Post title={p.title} likesCount={p.likesCount} name={p.name} id={p.id} key={p.id}/>)\r\n            }\r\n        )\r\n    ]\r\n\r\n    const onAddPost = () => {\r\n        props.addPost()\r\n    }\r\n\r\n    let onPostChange = (e: ChangeEvent<HTMLTextAreaElement>) => {\r\n        let text = e.currentTarget.value\r\n        props.updateNewPostText(text)\r\n    }\r\n\r\n    return (<div className={s.mainWrapper}>\r\n        <b> Posts</b>\r\n        <div><textarea onChange={onPostChange} value={props.dataMain.newPostText}/></div>\r\n\r\n        <button onClick={onAddPost}>add post</button>\r\n        {posts}\r\n    </div>)\r\n}\r\nexport default Main\r\n\r\n","import {mainPageType} from \"./oldStore_Types\";\r\n\r\ntype actionType = {\r\n    type: 'UPDATE_NEW_POST_TEXT' | 'ADD_POST'\r\n    newText: string\r\n}\r\n\r\nexport const addPostActionCreator = () => ({type: 'ADD_POST'})\r\nexport const updateNewPostTextActionCreator = (text?: string) => ({\r\n    type: 'UPDATE_NEW_POST_TEXT',\r\n    newText: text\r\n})\r\n\r\nlet initialState: mainPageType = {\r\n    posts: [\r\n        {id: 1, title: 'Hello', likesCount: 15, name: 'Igor Petrov'},\r\n        {id: 2, title: 'What are you doing?', likesCount: 20, name: 'George Ivanov'},\r\n        {id: 3, title: 'Yo', likesCount: 10, name: 'Mike Sidorov'}\r\n    ],\r\n    newPostText: ''\r\n}\r\n\r\nconst mainReducer = (state = initialState, action: actionType) => {\r\n    let stateCopy = {...state}\r\n    switch (action.type) {\r\n        case 'ADD_POST': {\r\n            let newPost = {\r\n                id: 5,\r\n                title: state.newPostText,\r\n                likesCount: 10,\r\n                name: 'Brand Nesterov'\r\n            }\r\n            stateCopy.posts.push(newPost)\r\n            stateCopy.newPostText = ''\r\n            return stateCopy\r\n        }\r\n        case 'UPDATE_NEW_POST_TEXT':\r\n            stateCopy.newPostText = action.newText\r\n            return stateCopy\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n\r\nexport default mainReducer","import React from \"react\";\r\nimport Main from \"./main\";\r\nimport {addPostActionCreator, updateNewPostTextActionCreator} from \"../../Redux/main_Reducer\";\r\nimport {RootStateType} from \"../../Redux/oldStore_Types\";\r\nimport {connect} from \"react-redux\";\r\nimport {Dispatch} from \"redux\";\r\n\r\n\r\nconst mapStateToProps = (state: RootStateType) => {\r\n    return {\r\n        dataMain: state.mainPage\r\n    }\r\n}\r\nconst mapDispatchToProps = (dispatch: Dispatch) => {\r\n    return {\r\n        updateNewPostText: (text: string) => {\r\n            dispatch(updateNewPostTextActionCreator(text))\r\n        },\r\n        addPost: () => {\r\n            dispatch(addPostActionCreator())\r\n        }\r\n    }\r\n}\r\n\r\n\r\nconst MainContainer = connect(mapStateToProps, mapDispatchToProps)(Main)\r\n\r\nexport default MainContainer","import React from \"react\";\r\nimport {NavLink} from \"react-router-dom\";\r\nimport s from './user.module.css'\r\nimport {usersMessagesType} from \"../../../../../Redux/oldStore_Types\";\r\n\r\n\r\nconst User: React.FC<usersMessagesType> = (props) => {\r\n    return (\r\n            <NavLink to={'/Message/' + props.id} className={s.userMessageWrapper}>\r\n\r\n                <img className={s.avatarWrapper}\r\n                     src=\"https://i.pinimg.com/564x/27/b8/d3/27b8d3c4ad0edaeef6b058c48d77e15c.jpg\"\r\n                     alt=\"UsersMessageAvatar\"/>\r\n                <div className={s.title}>{props.title}</div>\r\n\r\n            </NavLink>\r\n    )\r\n}\r\nexport default User","import React from \"react\";\r\nimport s from './message.module.css'\r\nimport {MessagesType} from \"../../../../../Redux/oldStore_Types\";\r\n\r\nconst Message: React.FC<MessagesType> = (props) => {\r\n    return (\r\n        <div>\r\n            <div>{props.title}</div>\r\n        </div>\r\n    )\r\n}\r\nexport default Message","import React, {ChangeEvent} from \"react\";\r\nimport s from './messages.module.css'\r\nimport {BrowserRouter} from \"react-router-dom\";\r\nimport User from \"./message/user/user\";\r\nimport Message from \"./message/usersMessage/message\";\r\nimport {\r\n    messagePageType,\r\n    MessagesType,\r\n    usersMessagesType\r\n} from \"../../../Redux/oldStore_Types\";\r\n\r\n\r\ntype MessagesProps = {\r\n    dataMessagePage: messagePageType\r\n    addMessage: () => void\r\n    messageChange: (text: string) => void\r\n\r\n}\r\n\r\nconst Messages = (props: MessagesProps) => {\r\n    let arrayUser = props.dataMessagePage.usersMessages.map(\r\n        (user: usersMessagesType) => {\r\n            return (<div className={s.user}><User title={user.title} id={user.id} key={user.id}/></div>)\r\n        }\r\n    )\r\n    let arrayMessages = props.dataMessagePage.messages.map(\r\n        (message: MessagesType) => {\r\n            return (<div className={s.message}><Message title={message.title} id={message.id} key={message.id}/></div>)\r\n        }\r\n    )\r\n\r\n    const addMessage = () => {\r\n        props.addMessage()\r\n    }\r\n\r\n    let onMessageChange = (e: ChangeEvent<HTMLTextAreaElement>) => {\r\n        let text = e.currentTarget.value\r\n        props.messageChange(text)\r\n    }\r\n    return (\r\n        <BrowserRouter>\r\n\r\n            <div className={s.MessageMainWrapper}>\r\n                <div className={s.dialogsUsersWrapper}>\r\n                    <div className={s.message_Title}>Users Dialogs</div>\r\n                    <div className={s.usersWrapper}>\r\n\r\n                        {arrayUser}\r\n\r\n                    </div>\r\n                </div>\r\n\r\n                <div className={s.messageWrapper}>\r\n                    <div className={s.usersMessageTitle}>Users Messages</div>\r\n                    <div className={s.usersMessageWrapper}>\r\n\r\n                        {arrayMessages}\r\n                        <textarea onChange={onMessageChange}\r\n                                  value={props.dataMessagePage.newMessageText}/>\r\n                        <div>\r\n                            <button onClick={addMessage}>send message</button>\r\n                        </div>\r\n\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n        </BrowserRouter>)\r\n\r\n}\r\nexport default Messages","type actionType = {\r\n    type: 'ADD_MESSAGE' | 'UPDATE_NEW_MESSAGE_TEXT'\r\n    newText: string\r\n}\r\n\r\nlet initialState = {\r\n    usersMessages: [\r\n        {id: 1, title: 'Igor Petrov'},\r\n        {id: 2, title: 'Ilya Sergeev'},\r\n        {id: 3, title: 'George Ivanov'},\r\n        {id: 4, title: 'Maria Sokolova'},\r\n        {id: 5, title: 'Mike Sidorov'}\r\n    ],\r\n    messages: [\r\n        {id: 1, title: 'Hello'},\r\n        {id: 2, title: 'How are you?'},\r\n        {id: 3, title: 'Hi'},\r\n        {id: 4, title: 'YO'},\r\n        {id: 5, title: 'I\\'m fine'}\r\n    ],\r\n    newMessageText: ''\r\n}\r\n\r\nconst messagesReducer = (state = initialState, action: actionType) => {\r\n    let stateCopy = {...state}\r\n    switch (action.type) {\r\n        case 'ADD_MESSAGE': {\r\n            let newMessage = {\r\n                id: 6,\r\n                title: state.newMessageText\r\n            }\r\n\r\n            stateCopy.messages.push(newMessage)\r\n            stateCopy.newMessageText = ''\r\n            return stateCopy\r\n        }\r\n        case'UPDATE_NEW_MESSAGE_TEXT': {\r\n            stateCopy.newMessageText = action.newText\r\n            return stateCopy\r\n        }\r\n        default:\r\n            return state\r\n    }\r\n}\r\nexport const addMessageActionCreator = () => ({type: 'ADD_MESSAGE'})\r\nexport const updateNewMessageTextActionCreator = (text: string) => ({\r\n    type: 'UPDATE_NEW_MESSAGE_TEXT',\r\n    newText: text\r\n})\r\n\r\n\r\nexport default messagesReducer","import React from \"react\";\r\nimport Messages from \"./messages\";\r\nimport {addMessageActionCreator, updateNewMessageTextActionCreator} from \"../../../Redux/messages_Reducer\";\r\nimport {connect} from \"react-redux\";\r\nimport {RootStateType} from \"../../../Redux/oldStore_Types\";\r\nimport {Dispatch} from \"redux\";\r\n\r\n\r\nconst mapStateToProps = (state: RootStateType) => {\r\n    return {\r\n        dataMessagePage: state.messagePage\r\n    }\r\n\r\n}\r\nconst mapDispatchToProps = (dispatch: Dispatch) => {\r\n    return {\r\n        addMessage: () => {\r\n            dispatch(addMessageActionCreator())\r\n        },\r\n        messageChange: (text: string) => {\r\n            dispatch(updateNewMessageTextActionCreator(text))\r\n        }\r\n    }\r\n}\r\n\r\nconst MessageContainer = connect(mapStateToProps, mapDispatchToProps)(Messages)\r\n\r\nexport default MessageContainer","import React from 'react';\r\nimport './App.module.css';\r\nimport Header from \"./Components/1header/header\";\r\nimport Navbar from \"./Components/3navbar/navbar\";\r\nimport s from './App.module.css'\r\nimport Profile from \"./Components/3navbar/1profile/profile\";\r\nimport News from \"./Components/3navbar/3news/news\";\r\nimport Music from \"./Components/3navbar/4music/music\";\r\nimport Settings from \"./Components/3navbar/5settings/settings\";\r\nimport {Route} from \"react-router-dom\";\r\nimport MainContainer from \"./Components/2main/main_Container\";\r\nimport MessageContainer from './Components/3navbar/2messages/messagesContainer';\r\n\r\n\r\nfunction App() {\r\n    return (\r\n        <div className={s.App}>\r\n            <Header/>\r\n            <Navbar/>\r\n            <Route render={() => <MainContainer/>} path={'/Main'}/>\r\n            <Route render={() => <Profile/>} path={'/Profile'}/>\r\n            <Route render={() => <MessageContainer/>} path={'/Message'}/>\r\n            <Route render={() => <News/>} path={'/News'}/>\r\n            <Route render={() => <Music/>} path={'/Music'}/>\r\n            <Route render={() => <Settings/>} path={'/Settings'}/>\r\n\r\n            {/*<Footer/>*/}\r\n        </div>\r\n\r\n    );\r\n}\r\n\r\nexport default App;\r\n","import {combineReducers, createStore} from \"redux\";\r\nimport messagesReducer from \"./messages_Reducer\";\r\nimport mainReducer from \"./main_Reducer\";\r\nexport type AppDispatchType = typeof store.dispatch\r\n\r\n\r\nlet reducers = combineReducers({\r\n    messagePage: messagesReducer,\r\n    mainPage: mainReducer\r\n});\r\nlet store = createStore(reducers);\r\n\r\n\r\n\r\nexport default store;\r\n","import React from 'react';\r\nimport './index.css';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport store from \"./Redux/redux-store\";\r\nimport {BrowserRouter} from \"react-router-dom\";\r\nimport {Provider} from \"react-redux\";\r\n\r\nReactDOM.render(\r\n    <BrowserRouter>\r\n        <Provider store={store}>\r\n            <App/>\r\n        </Provider>\r\n    </BrowserRouter>,\r\n    document.getElementById('root')\r\n)\r\n\r\n\r\n\r\n\r\n\r\n"],"sourceRoot":""}